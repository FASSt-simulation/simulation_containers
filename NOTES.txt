NOTES


## Add python3.8 and modules needed for tools
## need to check what libs we actually want
RUN cd / \
    && wget https://www.python.org/ftp/python/${PYTHON3_VERSION}/Python-${PYTHON3_VERSION}.tgz \
    && tar xvf Python-${PYTHON3_VERSION}.tgz \
    && cd Python-${PYTHON3_VERSION} \
    && ./configure --enable-optimizations \
    && make -j4 \
    && make altinstall \
    && cd / \
    && python3.8 --version \
    && python3.8 -m pip install ssl \
    && python3.8 -m pip install --upgrade pip \
    && python3.8 -m pip install ssl configparser numpy scipy matplotlib cftime pandas netCDF4 xarray scitools3 \
    && cd / \
    && rm -r Python-${PYTHON3_VERSION} \
    && rm Python-${PYTHON3_VERSION}.tgz


Jupyter
https://jupyter-docker-stacks.readthedocs.io/en/latest/

http://127.0.0.1:10000/lab

http://127.0.0.1:10000/lab

make sure you include the web token!!

docker run -p 10000:8888 docker-jupyter-extensible:latest


follow this for building our own custom jupyter-lab environment for running CTSM/ELM containers
and analyzing output
https://herrmann.tech/en/blog/2021/02/08/how-to-build-custom-environment-for-jupyter-in-docker.html

https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html

https://dev.to/juanbelieni/how-to-run-jupyterlab-on-docker-4n80


https://github.com/jupyter/docker-stacks/blob/master/scipy-notebook/Dockerfile

https://faun.pub/set-current-host-user-for-docker-container-4e521cef9ffc 

MORE GOOD INFO IN THIS!
https://mybinder.readthedocs.io/en/latest/tutorials/dockerfile.html

ARG NB_USER=jovyan
ARG NB_UID=1000
ENV USER ${NB_USER}
ENV NB_UID ${NB_UID}
ENV HOME /home/${NB_USER}

RUN adduser --disabled-password \
    --gecos "Default user" \
    --uid ${NB_UID} \
    ${NB_USER}




SSH keys and builds - need to sort out how to use ssh keys for checking out submodules
https://docs.docker.com/docker-hub/builds/#build-repositories-with-linked-private-submodules




OLMT NOTES
python site_fullrun.py --site US-Dk3 --caseidprefix MYTEST --nyears_ad_spinup 200 --nyears_final_spinup 400 \
--tstep 1 --cpl_bypass --compiler gnu --mpilib openmpi --gswp3 --model_root /data/sserbin/Modeling/FASSt-simulation/E3SM \
--spinup_vars --sitegroup AmeriFlux --no_submit \
--runroot /data2/Model_Output/elm_runs/olmt --machine modex


# need to install ncl in container
conda install -c conda-forge ncl

# on modex
conda create -p /data2/sserbin/conda_envs/olmt_ncl -c conda-forge ncl python=3.9

https://anaconda.org/conda-forge/ncl

# but how to get ncl installed on the container without creating a conda env?

RUN set -ex \
   && conda install --quiet --yes \
   'ncl' \
   && conda clean --all -f -y

   https://hub.docker.com/r/earthlab/ncl/dockerfile


   RUN conda install --yes -c conda-forge ncl


   ALSO NEED NCO

   conda install -c conda-forge nco


   Also need NCAP from NCO!! 


docker run -t -i --rm --hostname=docker --user root fasstsimulation/baseos:gcc850ompi316-latest

docker run -t -i --rm --hostname=docker --user $(id -u):$(id -g) \
-v /Volumes/data/Model_Data/cesm_input_datasets:/inputdata \
-v /Volumes/data2/Model_Output:/output fasstsimulation/elm-builds:release-v2.0.0-latest

docker run -t -i --rm --hostname=docker --user modeluser \
-v /Volumes/data/Model_Data/cesm_input_datasets:/inputdata \
-v /Volumes/data2/Model_Output:/output fasstsimulation/elm-builds:release-v2.0.0-latest

# quick and dirty example testing with docker
python site_fullrun.py --site US-Dk3 --caseidprefix MYTEST --nyears_ad_spinup 200 --nyears_final_spinup 400 \
--tstep 1 --cpl_bypass --compiler gnu --mpilib openmpi --gswp3 --model_root /E3SM --spinup_vars --sitegroup AmeriFlux --no_submit \
--ccsm_input /inputdata --caseroot /output/elm/olmt_cases --runroot /output/olmt/testing --np 2 --machine docker




# this sort of works - but still trying to get caseroot to be OUTSIDE of E3SM modelroot
docker run -t -i --rm --hostname=docker --user $(id -u):$(id -g) \
-v /Volumes/data/Model_Data/cesm_input_datasets:/inputdata \
-v /Volumes/data2/Model_Output:/output fasstsimulation/elm-builds:release-v2.0.0-latest \
bin/sh -c 'cd /tools/OLMT && ln -s /E3SM /output/E3SM && python site_fullrun.py --site US-Dk3 --sitegroup AmeriFlux --caseidprefix MYTEST \
--nyears_ad_spinup 200 --nyears_final_spinup 400 --tstep 1 --cpl_bypass --compiler gnu --mpilib openmpi --gswp3 \
--model_root /output/E3SM --caseroot /output/elm/cases --ccsm_input /inputdata --runroot /output/olmt/testing \
--spinup_vars  --no_submit --np 2 --machine docker'









singularity exec -B /data/Model_Data/cesm_input_datasets:/inputdata \
containers/elm-builds_release-v2.0.0-latest.sif 